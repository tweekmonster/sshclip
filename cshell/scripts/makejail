#!/usr/bin/env bash
bail() {
    >&2 echo "$*"
    exit 1
}


yn() {
    read -s -n 1 -p "$1" -r choice

    if [[ -z "$choice" && -n "$2" ]]; then
        echo $2
        exit 0
    fi

    case $choice in
        y|Y)
            echo -n "y"
            ;;
        n|N)
            echo -n "n"
            ;;
        *)
            yn "$1" "$2"
            ;;
    esac
}



user="$1"
jail="$2"
user_exists=0
user_create=0

[[ $(yn "This will create a jail at ${jail} for user ${user}. Is this okay? [y/N] " "n") == "n" ]] && bail "...canceled"

echo ""
[[ $UID -ne 0 ]] && echo "/!\\ You will be prompted for the sudo password"

id "$user" &> /dev/null
if [[ $? -ne 0 ]]; then
    if [[ $(yn "The user '${user}' does not exist. Create it? [y/N]" "n") == "n" ]]; then
        bail "...canceled"
    else
        echo ""
        user_create=1
        sudo useradd -m -s "/usr/local/bin/sshclip-shell" $user
        [[ $? -ne 0 ]] && bail "User creation failed"
    fi
else
    user_exists=1
    echo "User '${user}' already exists. Continuing."
fi

user_home=$(eval echo "~${user}")
echo "User Home: ${user_home}"

sudo mkdir -p "${user_home}/.ssh"
sudo touch "${user_home}/.ssh/authorized_keys"
sudo chown -R $user "${user_home}/.ssh"
sudo chmod 0700 "${user_home}/.ssh"
sudo chmod 0600 "${user_home}/.ssh/authorized_keys"

echo "Creating jail"
sudo mkdir -p "${jail}/etc"
sudo mkdir -p "${jail}/dev"
sudo mkdir -p "${jail}/lib"
sudo mkdir -p "${jail}/usr/local/bin"
sudo mkdir -p "${jail}${user_home}"
sudo chown $user "${jail}${user_home}"

sudo install -o 0 -g 0 -m 0755 bin/sshclip-shell "${jail}/usr/local/bin"
sudo mkdir -p "${jail}/var/lib/sshclip"
sudo chmod 0700 "${jail}/var/lib/sshclip"
sudo chown $user "${jail}/var/lib/sshclip"

cd "$jail"
sudo ln -s "lib" "lib64"

for item in $(ldd "${jail}/usr/local/bin/sshclip-shell"); do
    # Quick and dirty matching
    if [[ "$item" =~ "/" ]]; then
        [[ ! -e "$item" ]] && bail "$item does not exist"
        name=$(basename $item)
        echo "Copying $item -> /lib/${name}"
        sudo cp -fp "$item" "${jail}/lib/${name}"
    fi
done

sudo mknod -m 644 "$jail/dev/random" c 1 8
sudo mknod -m 644 "$jail/dev/urandom" c 1 9
sudo mknod -m 666 "$jail/dev/null" c 1 3

cat <<EOF
Add this to the bottom of your sshd_config file:

Match User $user
    ChrootDirectory $jail

If you want rsyslog to capture logs from the jail, add the following to a file
(e.g. 30-sshclip.conf) in /etc/rsyslog.d

\$AddUnixListenSocket ${jail}/dev/log
:syslogtag,contains,"sshclip-shell" /var/log/sshclip.log
& ~
EOF

# exit 0
#
# cd $(dirname $BASH_SOURCE)/..
# echo $(pwd)
#
# [[ ! -d "$jail" ]] && bail "$jail does not exist"
# id "$user" &> /dev/null || bail "User $user does not exist"
#
# set -x
#
# mkdir -p "$jail/etc"
# mkdir -p "$jail/dev"
# mkdir -p "$jail/lib"
# mkdir -p "$jail/usr/local/bin"
#
# make
# make install JAIL="${jail}/"
# shell="${jail}/usr/local/bin/sshclip-shell"
# chown -R "$user" "${jail}/var/cache/sshclip"
#
# cd "$jail"
# ln -s "lib" "lib64"
#
# mkdir -p "$jail/home/$user/.ssh"
# touch "$jail/home/$user/.ssh/authorized_keys"
# chown -R $user "$jail/home/$user"
#
# depends=$(ldd $shell)
# for item in $depends; do
#     # Quick and dirty matching
#     if [[ "$item" =~ "/" ]]; then
#         [[ ! -e "$item" ]] && bail "$item does not exist"
#         dir=$(dirname $item)
#         echo "Copying $item -> /lib/${item}"
#         name=$(basename $item)
#         cp -p "$item" "$jail/lib/$name"
#     fi
# done
#
# mknod -m 644 "$jail/dev/random" c 1 8
# mknod -m 644 "$jail/dev/urandom" c 1 9
# mknod -m 666 "$jail/dev/null" c 1 3
