#!/bin/bash --noprofile
set -f
# Client only reads first 256 KiB and base64 encodes it. ~340 KiB should be
# enough to store it.
readonly max_bytes=349528
readonly_user=0
action=""
store=""
userdir=""

conn=($SSH_CLIENT)


log() {
    logger -it "sshclip-server" -p "auth.notice" "(${conn[0]}:${conn[1]}) ${*}"
}

bail() {
    logger -it "sshclip-server" -p "auth.warning" "(${conn[0]}:${conn[1]}) ${*}"
    sleep $[($RANDOM % 5) + 1]s
    >&2 echo "${*}"
    exit 1
}

if [[ "${1}" != "-c" ]]; then
    bail "Nope"
fi

get_args() {
    while [[ $# > 0 ]]; do
        case $1 in
            get|put)
                action="${1}"
                store="${2}"
                shift
                ;;
            user)
                userdir="${2}"
                shift
                ;;
            readonly)
                readonly_user=1
                ;;
        esac
        shift
    done
}

allow_user=0
base=${SSHCLIP_STORE:-"${HOME}/.clipstore"}
args=(${@:2})

if [[ -n "${SSH_ORIGINAL_COMMAND}" ]]; then
    allow_user=1
    args+=($SSH_ORIGINAL_COMMAND)
fi

get_args "${args[@]}"

log "Action: ${action}, Store: ${store}, User: ${userdir}"


case $store in
    clipboard|primary|secondary)
        ;;
    *)
        bail "Incorrect store"
        ;;
esac

if [[ $readonly_user -eq 1 && $action == "put" ]]; then
    bail "Access is readonly"
fi

if [[ $allow_user -eq 0 && -n "${userdir}" ]]; then
    bail "Not allowed to specify user"
fi

if [[ $allow_user -eq 1 && -n "${userdir}" ]]; then
    userdir=${userdir//[^a-zA-Z0-9]}
    base="${base}/${userdir}"
fi

if [[ ! -d "${base}" ]]; then
    mkdir -p "${base}"
    chmod 700 "${base}"
fi

>&2 echo "${action} - ${store}"

store=${store//[^a-zA-Z0-9]}

if [[ -z "$store" ]]; then
    bail "Store not specified"
fi

store="${base}/${store}"
if [[ ! -e "${store}" ]]; then
    touch "${store}"
    chmod 600 "${store}"
fi

case $action in
    put)
        # Server expects base64 encoded data, so stripping non-printable
        # characters shouldn't be a problem.
        head -c $max_bytes | tr -cd '[:print:]' > "${store}"
        ;;
    get)
        cat "${store}"
        ;;
    *)
        bail "Bad action"
        exit 1
        ;;
esac

# vim: set ts=4 sw=4 tw=0 et :
